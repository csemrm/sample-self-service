/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const FlexLayout = require('sf-core/ui/flexlayout');
const Color = require('sf-core/ui/color');
const ImageView = require('sf-core/ui/imageview');
const ImageFillType = require('sf-core/ui/imagefilltype');
const Image = require('sf-core/ui/image');
const Label = require('sf-core/ui/label');
const TextAlignment = require('sf-core/ui/textalignment');
const Font = require('sf-core/ui/font');

const HorizontalDivider = require("../../components/HorizontalDivider");

const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const ItemUser = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const flexlayout160Style = getCombinedStyle(".flexLayout", {
			height: 40,
			width: null,
			id: 102,
			flexGrow: 1,
			alignSelf: FlexLayout.AlignSelf.STRETCH,
			flexDirection: FlexLayout.FlexDirection.ROW,
			alignItems: FlexLayout.AlignItems.CENTER
		});  
		var flexlayout160 = new FlexLayout(flexlayout160Style);  
		this.addChild(flexlayout160);
		
		const flexlayout161Style = getCombinedStyle(".flexLayout", {
			left: 0,
			top: 0,
			width: null,
			height: 1,
			backgroundColor: Color.create(255, 255, 255, 255),
			alpha: 1,
			id: 101,
			flexGrow: null,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignSelf: FlexLayout.AlignSelf.STRETCH
		}); 
		var flexlayout161 = new HorizontalDivider(flexlayout161Style, "itemUser");  
		this.addChild(flexlayout161);
		
		const userImageStyle = getCombinedStyle(".imageView", {
			width: 60,
			height: 60,
			marginLeft: 15,
			imageFillType: ImageFillType.ASPECTFIT,
			image: Image.createFromFile("images://avatar1.png"),
			id: 1023
		});  
		var userImage = new ImageView(userImageStyle);  
		flexlayout160.addChild(userImage);
		this.userImage = userImage;

		const flexlayout163Style = getCombinedStyle(".flexLayout", {
			height: 60,
			width: null,
			paddingLeft: 10,
			paddingTop: null,
			id: 1022,
			flexGrow: 1
		});  
		var flexlayout163 = new FlexLayout(flexlayout163Style);  
		flexlayout160.addChild(flexlayout163);
		
		const imageview41Style = getCombinedStyle(".imageView", {
			width: 28,
			height: 14,
			imageFillType: ImageFillType.ASPECTFIT,
			image: Image.createFromFile("images://arrow_right.png"),
			id: 1021
		});  
		var imageview41 = new ImageView(imageview41Style);  
		flexlayout160.addChild(imageview41);
		
		const userNameStyle = getCombinedStyle(".label .label-list-item-value", {
			text: "Adam Stewart",
			width: null,
			height: 30,
			textColor: Color.create(255, 74, 74, 74),
			textAlignment: TextAlignment.BOTTOMLEFT,
			id: 10222,
			font: Font.create("Arial", 18, Font.NORMAL)
		});  
		var userName = new Label(userNameStyle);  
		if(userNameStyle.scrollEnabled === false)
			userName.ios && (userName.ios.scrollEnabled = false);
		flexlayout163.addChild(userName);
		this.userName = userName;

		const userPositionStyle = getCombinedStyle(".label .label-list-item-value", {
			text: "Manager of Sales & Marketing",
			width: null,
			height: 30,
			id: 10221,
			font: Font.create("Arial", "12", Font.NORMAL)
		});  
		var userPosition = new Label(userPositionStyle);  
		if(userPositionStyle.scrollEnabled === false)
			userPosition.ios && (userPosition.ios.scrollEnabled = false);
		flexlayout163.addChild(userPosition);
		this.userPosition = userPosition;

		//assign the children to itemUser 
		this.children = Object.assign({}, {
			flexlayout160: flexlayout160,
			flexlayout161: flexlayout161
		});
		
		//assign the children of flexlayout160
		flexlayout160.children = Object.assign({}, {
			userImage: userImage,
			flexlayout163: flexlayout163,
			imageview41: imageview41
		});
		
		//assign the children of flexlayout163
		flexlayout163.children = Object.assign({}, {
			userName: userName,
			userPosition: userPosition
		});
		
	});

ItemUser.defaults = getCombinedStyle(".flexLayout", {
	width: 360,
	height: 75,
	flexDirection: FlexLayout.FlexDirection.COLUMN,
	alignItems: FlexLayout.AlignItems.CENTER
});

module && (module.exports = ItemUser);