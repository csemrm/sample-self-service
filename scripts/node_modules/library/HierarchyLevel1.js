/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const ImageView = require('sf-core/ui/imageview');
const Image = require('sf-core/ui/image');
const ImageFillType = require('sf-core/ui/imagefilltype');
const Color = require('sf-core/ui/color');
const FlexLayout = require('sf-core/ui/flexlayout');
const Label = require('sf-core/ui/label');
const Font = require('sf-core/ui/font');



const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const HierarchyLevel1 = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const imageview7Style = getCombinedStyle(".imageView", {
			width: 60,
			height: 60,
			marginLeft: 15,
			image: Image.createFromFile("images://avatar1.png"),
			imageFillType: ImageFillType.ASPECTFIT,
			borderRadius: 30,
			borderColor: Color.create(255, 151, 151, 151),
			borderWidth: 1
		});
		var imageview7 = new ImageView(imageview7Style);
		this.addChild(imageview7);
		
		const flexlayout178Style = getCombinedStyle(".flexLayout", {
			width: null,
			height: 60,
			paddingLeft: 10,
			flexGrow: 1
		});
		var flexlayout178 = new FlexLayout(flexlayout178Style);
		this.addChild(flexlayout178);
		
		const flexlayout323Style = getCombinedStyle(".flexLayout", {
			width: 1,
			height: 8,
			left: 45,
			bottom: 0,
			backgroundColor: Color.create(255, 151, 151, 151),
			positionType: FlexLayout.PositionType.ABSOLUTE
		});
		var flexlayout323 = new FlexLayout(flexlayout323Style);
		this.addChild(flexlayout323);
		
		const label493Style = getCombinedStyle(".label .label-list-item-value", {
			height: 30,
			width: null,
			textColor: Color.create(255, 0, 0, 0),
			text: "Adam Stewart",
			font: Font.create("Arial", 18, Font.NORMAL)
		});
		var label493 = new Label(label493Style);
		if(label493Style.scrollEnabled === false)
			label493.ios && (label493.ios.scrollEnabled = false);
		flexlayout178.addChild(label493);
		
		const label494Style = getCombinedStyle(".label .label-list-item-value", {
			height: 30,
			width: null,
			text: "Manager of Sales and Marketing"
		});
		var label494 = new Label(label494Style);
		if(label494Style.scrollEnabled === false)
			label494.ios && (label494.ios.scrollEnabled = false);
		flexlayout178.addChild(label494);
		
		//assign the children to hierarchyLevel1 
		this.children = Object.assign({}, {
			imageview7: imageview7,
			flexlayout178: flexlayout178,
			flexlayout323: flexlayout323
		});
		
		//assign the children of flexlayout178
		flexlayout178.children = Object.assign({}, {
			label493: label493,
			label494: label494
		});
		
	});

HierarchyLevel1.defaults = getCombinedStyle(".flexLayout", {
	height: 75,
	width: 360,
	alignItems: FlexLayout.AlignItems.CENTER,
	flexDirection: FlexLayout.FlexDirection.ROW,
	positionType: FlexLayout.PositionType.RELATIVE
});

module && (module.exports = HierarchyLevel1);