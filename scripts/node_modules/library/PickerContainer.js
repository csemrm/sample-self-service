/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const FlexLayout = require('sf-core/ui/flexlayout');
const Label = require('sf-core/ui/label');
const Color = require('sf-core/ui/color');
const ImageView = require('sf-core/ui/imageview');
const Image = require('sf-core/ui/image');
const ImageFillType = require('sf-core/ui/imagefilltype');

const HorizontalDivider = require("../../components/HorizontalDivider");

const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const PickerContainer = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const flexlayout429Style = getCombinedStyle(".flexLayout", {
			height: 20,
			width: null,
			paddingLeft: 10,
			paddingRight: 10,
			flexGrow: null,
			flexDirection: FlexLayout.FlexDirection.ROW,
			alignItems: FlexLayout.AlignItems.CENTER
		});  
		var flexlayout429 = new FlexLayout(flexlayout429Style);  
		this.addChild(flexlayout429);
		
		const pickerTextStyle = getCombinedStyle(".label .label-list-item-value", {
			width: null,
			height: 24,
			marginLeft: 10,
			marginRight: 10,
			text: "",
			textColor: Color.create(255, 74, 74, 74),
			flexGrow: null
		});  
		var pickerText = new Label(pickerTextStyle);  
		if(pickerTextStyle.scrollEnabled === false)
			pickerText.ios && (pickerText.ios.scrollEnabled = false);
		this.addChild(pickerText);
		this.pickerText = pickerText;

		const flexlayout430Style = getCombinedStyle(".flexLayout", {
			left: 0,
			top: 0,
			width: null,
			height: 1,
			backgroundColor: Color.create(255, 255, 255, 255),
			alpha: 1,
			flexGrow: null,
			positionType: FlexLayout.PositionType.RELATIVE
		}); 
		var flexlayout430 = new HorizontalDivider(flexlayout430Style, "pickerContainer");  
		this.addChild(flexlayout430);
		
		const pickerTitleStyle = getCombinedStyle(".label .label-list-item-title", {
			width: null,
			height: 30,
			text: "Text",
			flexGrow: 1
		});  
		var pickerTitle = new Label(pickerTitleStyle);  
		if(pickerTitleStyle.scrollEnabled === false)
			pickerTitle.ios && (pickerTitle.ios.scrollEnabled = false);
		flexlayout429.addChild(pickerTitle);
		this.pickerTitle = pickerTitle;

		const imageview2Style = getCombinedStyle(".imageView", {
			width: 10,
			height: 5,
			image: Image.createFromFile("images://arrow_down.png"),
			imageFillType: ImageFillType.ASPECTFIT
		});  
		var imageview2 = new ImageView(imageview2Style);  
		flexlayout429.addChild(imageview2);
		
		//assign the children to pickerContainer 
		this.children = Object.assign({}, {
			flexlayout429: flexlayout429,
			pickerText: pickerText,
			flexlayout430: flexlayout430
		});
		
		//assign the children of flexlayout429
		flexlayout429.children = Object.assign({}, {
			pickerTitle: pickerTitle,
			imageview2: imageview2
		});
		
	});

PickerContainer.defaults = getCombinedStyle(".flexLayout", {
	width: 207,
	height: 45,
	positionType: FlexLayout.PositionType.RELATIVE
});

module && (module.exports = PickerContainer);