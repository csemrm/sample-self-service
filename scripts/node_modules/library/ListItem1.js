/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const Label = require('sf-core/ui/label');
const Color = require('sf-core/ui/color');
const TextAlignment = require('sf-core/ui/textalignment');
const FlexLayout = require('sf-core/ui/flexlayout');



const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const ListItem1 = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const titleStyle = getCombinedStyle(".label .label-list-item-title", {
			width: 120,
			height: 30,
			marginLeft: 10,
			text: "Text",
			backgroundColor: Color.create(0, 255, 255, 255),
			minWidth: null,
			maxWidth: null,
			flexGrow: null
		});
		var title = new Label(titleStyle);
		if(titleStyle.scrollEnabled === false)
			title.ios && (title.ios.scrollEnabled = false);
		this.addChild(title);
		this.title = title;

		const valueStyle = getCombinedStyle(".label .label-list-item-value", {
			width: null,
			height: 30,
			textAlignment: TextAlignment.MIDRIGHT,
			marginRight: 10,
			text: "Value",
			textColor: Color.create(255, 155, 155, 155),
			backgroundColor: Color.create(0, 255, 255, 255),
			id: 100,
			flexGrow: 2
		});
		var value = new Label(valueStyle);
		if(valueStyle.scrollEnabled === false)
			value.ios && (value.ios.scrollEnabled = false);
		this.addChild(value);
		this.value = value;

		//assign the children to listItem1 
		this.children = Object.assign({}, {
			title: title,
			value: value
		});
		
	});

ListItem1.defaults = getCombinedStyle(".flexLayout", {
	width: 326,
	height: 59,
	backgroundColor: Color.create(255, 255, 255, 255),
	flexDirection: FlexLayout.FlexDirection.ROW,
	positionType: FlexLayout.PositionType.RELATIVE,
	alignItems: FlexLayout.AlignItems.CENTER
});

module && (module.exports = ListItem1);