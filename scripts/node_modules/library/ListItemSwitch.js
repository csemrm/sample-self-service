/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const Label = require('sf-core/ui/label');
const Switch = require('sf-core/ui/switch');
const FlexLayout = require('sf-core/ui/flexlayout');



const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const ListItemSwitch = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const titleSwitchStyle = getCombinedStyle(".label .label-list-item-title", {
			width: 120,
			height: 30,
			marginLeft: 10,
			text: "Text"
		});
		var titleSwitch = new Label(titleSwitchStyle);
		if(titleSwitchStyle.scrollEnabled === false)
			titleSwitch.ios && (titleSwitch.ios.scrollEnabled = false);
		this.addChild(titleSwitch);
		
		const switchItemStyle = getCombinedStyle(".switch", {
			toggle: false,
			width: null,
			marginRight: 10,
			minHeight: 31,
			minWidth: 51
		});
		var switchItem = new Switch(switchItemStyle);
		if(switchItemStyle.toggleOffColor)
			switchItem.android && (switchItem.android.toggleOffColor = switchItemStyle.toggleOffColor);
		this.addChild(switchItem);
		
		//assign the children to listItemSwitch 
		this.children = Object.assign({}, {
			titleSwitch: titleSwitch,
			switchItem: switchItem
		});
		
	});

ListItemSwitch.defaults = getCombinedStyle(".flexLayout", {
	width: 326,
	height: 59,
	marginLeft: null,
	flexDirection: FlexLayout.FlexDirection.ROW,
	alignItems: FlexLayout.AlignItems.CENTER,
	justifyContent: FlexLayout.JustifyContent.SPACE_BETWEEN
});

module && (module.exports = ListItemSwitch);