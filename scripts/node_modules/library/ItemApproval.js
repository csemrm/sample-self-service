/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const FlexLayout = require('sf-core/ui/flexlayout');
const Color = require('sf-core/ui/color');
const Label = require('sf-core/ui/label');
const TextAlignment = require('sf-core/ui/textalignment');
const Font = require('sf-core/ui/font');
const ImageView = require('sf-core/ui/imageview');
const ImageFillType = require('sf-core/ui/imagefilltype');
const Image = require('sf-core/ui/image');



const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const ItemApproval = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const flexlayout119Style = getCombinedStyle(".flexLayout", {
			width: null,
			height: null,
			id: 30,
			flexGrow: 1,
			flexDirection: FlexLayout.FlexDirection.ROW,
			alignItems: FlexLayout.AlignItems.CENTER
		});
		var flexlayout119 = new FlexLayout(flexlayout119Style);
		this.addChild(flexlayout119);
		
		const flexlayout120Style = getCombinedStyle(".flexLayout", {
			width: null,
			height: 1,
			backgroundColor: Color.create(102, 151, 151, 151),
			marginLeft: null,
			marginRight: null,
			id: 20
		});
		var flexlayout120 = new FlexLayout(flexlayout120Style);
		this.addChild(flexlayout120);
		
		const approvedDateStyle = getCombinedStyle(".label", {
			height: 20,
			width: 70,
			backgroundColor: Color.create(255, 216, 216, 216),
			textColor: Color.create(255, 74, 74, 74),
			top: 0,
			right: 0,
			textAlignment: TextAlignment.MIDCENTER,
			text: "1 day ago",
			marginRight: null,
			id: 10,
			positionType: FlexLayout.PositionType.ABSOLUTE,
			font: Font.create("Arial", 12, Font.NORMAL)
		});
		var approvedDate = new Label(approvedDateStyle);
		if(approvedDateStyle.scrollEnabled === false)
			approvedDate.ios && (approvedDate.ios.scrollEnabled = false);
		this.addChild(approvedDate);
		this.approvedDate = approvedDate;

		const apUserImageStyle = getCombinedStyle(".imageView", {
			width: 60,
			height: 60,
			marginLeft: 15,
			imageFillType: ImageFillType.ASPECTFIT,
			image: Image.createFromFile("images://avatar1.png"),
			id: 90
		});
		var apUserImage = new ImageView(apUserImageStyle);
		flexlayout119.addChild(apUserImage);
		this.apUserImage = apUserImage;

		const flexlayout255Style = getCombinedStyle(".flexLayout", {
			height: 65,
			width: null,
			marginLeft: 10,
			id: 50,
			flexGrow: 1
		});
		var flexlayout255 = new FlexLayout(flexlayout255Style);
		flexlayout119.addChild(flexlayout255);
		
		const apRightArrowStyle = getCombinedStyle(".imageView", {
			width: 28,
			height: 14,
			image: Image.createFromFile("images://arrow_right.png"),
			imageFillType: ImageFillType.ASPECTFIT,
			id: 40
		});
		var apRightArrow = new ImageView(apRightArrowStyle);
		flexlayout119.addChild(apRightArrow);
		
		const apUsernameStyle = getCombinedStyle(".label .label-list-item-value", {
			width: null,
			height: null,
			text: "Adam Stewart",
			textColor: Color.create(255, 74, 74, 74),
			id: 80,
			flexGrow: 1,
			font: Font.create("Arial", 18, Font.NORMAL)
		});
		var apUsername = new Label(apUsernameStyle);
		if(apUsernameStyle.scrollEnabled === false)
			apUsername.ios && (apUsername.ios.scrollEnabled = false);
		flexlayout255.addChild(apUsername);
		this.apUsername = apUsername;

		const apPositionStyle = getCombinedStyle(".label .label-list-item-value", {
			width: null,
			height: null,
			text: "Manager of Sales and Marketing",
			id: 70,
			flexGrow: 1
		});
		var apPosition = new Label(apPositionStyle);
		if(apPositionStyle.scrollEnabled === false)
			apPosition.ios && (apPosition.ios.scrollEnabled = false);
		flexlayout255.addChild(apPosition);
		this.apPosition = apPosition;

		const apDescriptionStyle = getCombinedStyle(".label .label-list-item-value", {
			width: null,
			height: null,
			text: "Personal Leave, 10 days requested",
			textColor: Color.create(255, 74, 74, 74),
			id: 60,
			flexGrow: 1
		});
		var apDescription = new Label(apDescriptionStyle);
		if(apDescriptionStyle.scrollEnabled === false)
			apDescription.ios && (apDescription.ios.scrollEnabled = false);
		flexlayout255.addChild(apDescription);
		this.apDescription = apDescription;

		//assign the children to itemApproval 
		this.children = Object.assign({}, {
			flexlayout119: flexlayout119,
			flexlayout120: flexlayout120,
			approvedDate: approvedDate
		});
		
		//assign the children of flexlayout119
		flexlayout119.children = Object.assign({}, {
			apUserImage: apUserImage,
			flexlayout255: flexlayout255,
			apRightArrow: apRightArrow
		});
		
		//assign the children of flexlayout255
		flexlayout255.children = Object.assign({}, {
			apUsername: apUsername,
			apPosition: apPosition,
			apDescription: apDescription
		});
		
	});

ItemApproval.defaults = getCombinedStyle(".flexLayout", {
	width: 360,
	height: 90
});

module && (module.exports = ItemApproval);