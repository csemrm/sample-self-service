/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const ImageView = require('sf-core/ui/imageview');
const Image = require('sf-core/ui/image');
const ImageFillType = require('sf-core/ui/imagefilltype');
const Color = require('sf-core/ui/color');
const FlexLayout = require('sf-core/ui/flexlayout');
const Label = require('sf-core/ui/label');
const Font = require('sf-core/ui/font');



const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const HierarchyLevel2 = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const imageview8Style = getCombinedStyle(".imageView", {
			width: 60,
			height: 60,
			marginLeft: 75,
			image: Image.createFromFile("images://myavatar.png"),
			imageFillType: ImageFillType.ASPECTFIT,
			borderRadius: 30,
			borderWidth: 1,
			borderColor: Color.create(255, 23, 117, 208)
		});
		var imageview8 = new ImageView(imageview8Style);
		this.addChild(imageview8);
		
		const flexlayout510Style = getCombinedStyle(".flexLayout", {
			width: null,
			height: 60,
			paddingLeft: 10,
			flexGrow: 1
		});
		var flexlayout510 = new FlexLayout(flexlayout510Style);
		this.addChild(flexlayout510);
		
		const flexlayout667Style = getCombinedStyle(".flexLayout", {
			width: 1,
			height: 37,
			left: 45,
			top: 0,
			backgroundColor: Color.create(255, 151, 151, 151),
			positionType: FlexLayout.PositionType.ABSOLUTE
		});
		var flexlayout667 = new FlexLayout(flexlayout667Style);
		this.addChild(flexlayout667);
		
		const flexlayout707Style = getCombinedStyle(".flexLayout", {
			height: 1,
			width: 30,
			left: 45,
			top: 37,
			backgroundColor: Color.create(255, 151, 151, 151),
			positionType: FlexLayout.PositionType.ABSOLUTE
		});
		var flexlayout707 = new FlexLayout(flexlayout707Style);
		this.addChild(flexlayout707);
		
		const flexlayout813Style = getCombinedStyle(".flexLayout", {
			width: 1,
			height: 8,
			bottom: 0,
			backgroundColor: Color.create(255, 151, 151, 151),
			left: 105,
			positionType: FlexLayout.PositionType.ABSOLUTE
		});
		var flexlayout813 = new FlexLayout(flexlayout813Style);
		this.addChild(flexlayout813);
		
		const label1140Style = getCombinedStyle(".label .label-list-item-value", {
			width: null,
			height: 30,
			textColor: Color.create(255, 23, 117, 208),
			text: "Anthony Bell",
			font: Font.create("Arial", 18, Font.NORMAL)
		});
		var label1140 = new Label(label1140Style);
		if(label1140Style.scrollEnabled === false)
			label1140.ios && (label1140.ios.scrollEnabled = false);
		flexlayout510.addChild(label1140);
		
		const label1141Style = getCombinedStyle(".label .label-list-item-value", {
			width: null,
			height: 30,
			text: "Director of Sales and Marketing",
			textColor: Color.create(128, 23, 117, 208)
		});
		var label1141 = new Label(label1141Style);
		if(label1141Style.scrollEnabled === false)
			label1141.ios && (label1141.ios.scrollEnabled = false);
		flexlayout510.addChild(label1141);
		
		//assign the children to hierarchyLevel2 
		this.children = Object.assign({}, {
			imageview8: imageview8,
			flexlayout510: flexlayout510,
			flexlayout667: flexlayout667,
			flexlayout707: flexlayout707,
			flexlayout813: flexlayout813
		});
		
		//assign the children of flexlayout510
		flexlayout510.children = Object.assign({}, {
			label1140: label1140,
			label1141: label1141
		});
		
	});

HierarchyLevel2.defaults = getCombinedStyle(".flexLayout", {
	width: 360,
	height: 75,
	alignItems: FlexLayout.AlignItems.CENTER,
	flexDirection: FlexLayout.FlexDirection.ROW,
	positionType: FlexLayout.PositionType.RELATIVE
});

module && (module.exports = HierarchyLevel2);